import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  );
}

//--------------------Route HAndlers -------------------
// rout-handlers allow you to handle custom request handlers for a given route. they are defined
// in a route.tsx or route.js file
// to avoid conflict between pager-route (page.tsx) and route-handler (route.tsx)
// place the rote-handler (route.ts) to a subdirectory named 'api'

//-------------------- POST request -------------------
// app/comments/route.ts
// https://www.youtube.com/watch?v=pzPS7Fn-8tE&list=PLC3y8-rFHvwjOKd6gdf4QtV1uYNiQnruI&index=35
// to test the request we can use VScode extension called 'Thunder Client'.

//-------------------- Dynamic Route Handler -------------------
// GET method
// see: app/comments/[id]/route.ts

//-------------------- Dynamic Route Handler -------------------
// PATCH and DELETE methods
// see: app/comments/[id]/route.ts

//-------------------- URL query parameter ---------------------
// see: app/comments/[id]/route.ts  the second GET method

//-------------------- Redirects in Route Handlers ---------------------
// see: app/comments/[id]/route.ts using {redirect} from "next/navigation"

//-------------------- Headers in Route Handlers ---------------------
// read headers from incoming request. see app/profile/api/route.ts
// to set outgoing request: you need to return a new response with a new headers
// check Content-Type in Inspect-->Network-->refresh the page-->click on api-->headers-->Response Headers

// https://www.youtube.com/watch?v=pxHbFrahyLY&list=PLC3y8-rFHvwjOKd6gdf4QtV1uYNiQnruI&index=41

//-------------------- Cookies in Route Handlers ---------------------
// Cookies are small piece of data that a server sends to user's web browser
// app/profile/api/route.ts

//-------------------- Cashing in Route Handlers ---------------------
// app/time/route.ts
// if we build the app, and npm run test, we have the current local time. if we refresh the page,
// the time does not updated and remains the same, because of cashing. 
// to inform Next.js that we don't want a response to be cashed,
// we can use segment config option with a dynamic mode
